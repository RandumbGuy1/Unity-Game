using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CameraCollision : MonoBehaviour
{
	public Transform player;
	public Transform playerPoint;

	public float maxFov;
	public float fov;
	private float currentFov;

	public float minDistance;
	public float maxDistance;
	public float smooth;
	Vector3 dollyDir;
	private Vector3 dollyDirAdjusted;
	private float distance;

	void Awake()
	{
		dollyDir = transform.localPosition.normalized;
		distance = transform.localPosition.magnitude;
	}

	void Start()
    {
		currentFov = fov;
	}

	void Update()
	{
		GetComponent<Camera>().fieldOfView = fov;

		Vector3 desiredCameraPos = transform.parent.TransformPoint(dollyDir * (maxDistance));
		RaycastHit hit;

		if (Physics.Linecast(playerPoint.position, desiredCameraPos, out hit))
		{
			distance = Mathf.Clamp((hit.distance * 0.87f), minDistance, maxDistance);
		}
		else
		{
			distance = maxDistance;
		}

		transform.localPosition = Vector3.Lerp(transform.localPosition, dollyDir * distance, Time.deltaTime * smooth);
	}

	public void CameraWallRun()
    {
		if (fov < (maxFov))
        {
			fov += maxFov / (maxFov);
        }
    }

	public void ResetCameraWallRun()
	{
		if (fov > currentFov)
		{
			fov -= maxFov / (maxFov);
		}
	}
}
